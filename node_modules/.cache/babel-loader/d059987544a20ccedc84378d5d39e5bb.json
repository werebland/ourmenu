{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Chris/ourmenu/pages/index.js\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  body {\\n    margin: 0;\\n    padding: 0;\\n    font-family: 'Source Sans Pro', sans-serif;\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport posed from 'react-pose';\nimport Select from 'react-select';\nimport MenuFinder from '../components/MenuFinder';\nvar cities = [{\n  label: 'Halifax',\n  value: 'Halifax'\n}];\nvar GlobalStyle = createGlobalStyle(_templateObject());\nvar IndexWrapper = styled.div.withConfig({\n  displayName: \"pages__IndexWrapper\",\n  componentId: \"sc-1wbo52z-0\"\n})([\"width:100%;height:100vh;max-height:100vh;margin:0;padding:0;background-image:url(https://images.unsplash.com/photo-1491739481003-2991327b66e2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1654&q=80);background-size:cover;background-position:center;box-sizing:border-box;display:flex;flex-flow:column nowrap;position:absolute;top:0;right:0;bottom:0;left:0;\"]);\nvar Nav = styled.div.withConfig({\n  displayName: \"pages__Nav\",\n  componentId: \"sc-1wbo52z-1\"\n})([\"width:100%;max-width:100vw;min-width:100vw;height:96px;padding:0 32px;box-sizing:border-box;display:flex;flex-flow:row nowrap;justify-content:space-between;align-items:center;\"]);\nvar NavButton = styled.button.withConfig({\n  displayName: \"pages__NavButton\",\n  componentId: \"sc-1wbo52z-2\"\n})([\"border:0;border-radius:8px;appearance:none;background:#fff;font-size:1rem;font-weight:700;color:#000;padding:8px 16px;\"]);\nvar heroPose = {\n  lowered: {\n    y: function y(_ref) {\n      var height = _ref.height;\n      return \"calc(50vh - 72px - \".concat(height / 2, \"px) \");\n    }\n  },\n  raised: {\n    y: '0vh'\n  }\n};\nvar Hero = styled(posed.div(heroPose)).withConfig({\n  displayName: \"pages__Hero\",\n  componentId: \"sc-1wbo52z-3\"\n})([\"display:flex;flex-flow:column nowrap;align-items:center;\"]);\nvar HeroText = styled.h1.withConfig({\n  displayName: \"pages__HeroText\",\n  componentId: \"sc-1wbo52z-4\"\n})([\"font-size:3rem;font-weight:700;color:#fff;margin:0;margin-bottom:16px;\"]);\nvar ContentArea = styled.div.withConfig({\n  displayName: \"pages__ContentArea\",\n  componentId: \"sc-1wbo52z-5\"\n})([\"width:100%;padding:16px;box-sizing:border-box;display:flex;flex:1;\"]);\nvar customSelectStyles = {\n  control: function control(provided) {\n    return _objectSpread({}, provided, {\n      borderRadius: 8,\n      borderColor: '#fff',\n      fontSize: '2.25rem',\n      height: 56,\n      width: 240,\n      fontWeight: 700,\n      color: '#000'\n    });\n  }\n};\n\nvar Index =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Index, _Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n    _this.state = {\n      menu: \"\",\n      restaurants: [{\n        name: 'Julep Kitchen + Bar',\n        username: 'julepkitchenbar'\n      }, {\n        name: 'XOH',\n        username: 'xoh'\n      }],\n      raised: false,\n      city: ''\n    };\n    _this.heroRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(displayLocationInfo);\n      }\n\n      function displayLocationInfo(position) {\n        var lng = position.coords.longitude;\n        var lat = position.coords.latitude;\n        console.log(\"longitude: \".concat(lng, \" | latitude: \").concat(lat));\n      }\n\n      console.log(this.heroRef.current.offsetHeight);\n      console.log(this.heroRef.current.offsetHeight);\n      this.setState({\n        heroHeight: this.heroRef.current.offsetHeight\n      });\n    }\n  }, {\n    key: \"handleGeolocation\",\n    value: function handleGeolocation(position) {\n      console.log('Geolocation');\n      console.log(position);\n    }\n  }, {\n    key: \"handleCitySelect\",\n    value: function handleCitySelect(value) {\n      console.log(value);\n      this.setState({\n        city: value.value\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(IndexWrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, React.createElement(GlobalStyle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        style: {\n          color: '#fff'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"our \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), \"menu\"), React.createElement(NavButton, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"For restaurants\")), React.createElement(Hero, {\n        pose: this.state.city !== \"\" ? 'raised' : 'lowered',\n        ref: this.heroRef,\n        height: this.state.heroHeight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(HeroText, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Menus for restaurants in\"), React.createElement(Select, {\n        value: cities.find(function (option) {\n          return option.value === _this2.state.city;\n        }),\n        onChange: function onChange(value) {\n          return _this2.handleCitySelect(value);\n        },\n        options: cities,\n        styles: customSelectStyles,\n        simpleValue: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      })), React.createElement(ContentArea, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(MenuFinder, {\n        menu: this.state.menu,\n        restaurants: this.state.restaurants,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nexport default Index;","map":{"version":3,"sources":["/Users/Chris/ourmenu/pages/index.js"],"names":["React","Component","styled","createGlobalStyle","posed","Select","MenuFinder","cities","label","value","GlobalStyle","IndexWrapper","div","Nav","NavButton","button","heroPose","lowered","y","height","raised","Hero","HeroText","h1","ContentArea","customSelectStyles","control","provided","borderRadius","borderColor","fontSize","width","fontWeight","color","Index","props","state","menu","restaurants","name","username","city","heroRef","createRef","navigator","geolocation","getCurrentPosition","displayLocationInfo","position","lng","coords","longitude","lat","latitude","console","log","current","offsetHeight","setState","heroHeight","find","option","handleCitySelect"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AACA,OAAOC,KAAP,MAAkB,YAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,IAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,KAAK,EAAE,SADT;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADa,CAAf;AAOA,IAAMC,WAAW,GAAGP,iBAAH,mBAAjB;AAQA,IAAMQ,YAAY,GAAGT,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,6XAAlB;AAmBA,IAAMC,GAAG,GAAGX,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,uLAAT;AAaA,IAAME,SAAS,GAAGZ,MAAM,CAACa,MAAV;AAAA;AAAA;AAAA,8HAAf;AAWA,IAAMC,QAAQ,GAAG;AACfC,EAAAA,OAAO,EAAE;AACPC,IAAAA,CAAC,EAAE;AAAA,UAAGC,MAAH,QAAGA,MAAH;AAAA,0CAAuCA,MAAM,GAAG,CAAhD;AAAA;AADI,GADM;AAIfC,EAAAA,MAAM,EAAE;AACNF,IAAAA,CAAC,EAAE;AADG;AAJO,CAAjB;AASA,IAAMG,IAAI,GAAGnB,MAAM,CAACE,KAAK,CAACQ,GAAN,CAAUI,QAAV,CAAD,CAAT;AAAA;AAAA;AAAA,gEAAV;AAMA,IAAMM,QAAQ,GAAGpB,MAAM,CAACqB,EAAV;AAAA;AAAA;AAAA,8EAAd;AAQA,IAAMC,WAAW,GAAGtB,MAAM,CAACU,GAAV;AAAA;AAAA;AAAA,0EAAjB;AAQA,IAAMa,kBAAkB,GAAG;AACzBC,EAAAA,OAAO,EAAE,iBAACC,QAAD;AAAA,6BACJA,QADI;AAEPC,MAAAA,YAAY,EAAE,CAFP;AAGPC,MAAAA,WAAW,EAAE,MAHN;AAIPC,MAAAA,QAAQ,EAAE,SAJH;AAKPX,MAAAA,MAAM,EAAE,EALD;AAMPY,MAAAA,KAAK,EAAE,GANA;AAOPC,MAAAA,UAAU,EAAE,GAPL;AAQPC,MAAAA,KAAK,EAAE;AARA;AAAA;AADgB,CAA3B;;IAaMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,WAAW,EAAE,CACX;AACEC,QAAAA,IAAI,EAAE,qBADR;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OADW,EAKX;AACED,QAAAA,IAAI,EAAE,KADR;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OALW,CAFF;AAYXpB,MAAAA,MAAM,EAAE,KAZG;AAaXqB,MAAAA,IAAI,EAAE;AAbK,KAAb;AAeA,UAAKC,OAAL,GAAe1C,KAAK,CAAC2C,SAAN,EAAf;AAjBiB;AAkBlB;;;;wCAEmB;AAClB,UAAIC,SAAS,CAACC,WAAd,EAA2B;AACzBD,QAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,mBAAzC;AACD;;AAED,eAASA,mBAAT,CAA6BC,QAA7B,EAAuC;AACrC,YAAMC,GAAG,GAAGD,QAAQ,CAACE,MAAT,CAAgBC,SAA5B;AACA,YAAMC,GAAG,GAAGJ,QAAQ,CAACE,MAAT,CAAgBG,QAA5B;AAEAC,QAAAA,OAAO,CAACC,GAAR,sBAA2BN,GAA3B,0BAAgDG,GAAhD;AACD;;AACDE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,OAAL,CAAac,OAAb,CAAqBC,YAAjC;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,OAAL,CAAac,OAAb,CAAqBC,YAAjC;AACA,WAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAE,KAAKjB,OAAL,CAAac,OAAb,CAAqBC;AADrB,OAAd;AAGD;;;sCAEiBT,Q,EAAU;AAC1BM,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACD;;;qCAEgBvC,K,EAAO;AACtB6C,MAAAA,OAAO,CAACC,GAAR,CAAY9C,KAAZ;AACA,WAAKiD,QAAL,CAAc;AACZjB,QAAAA,IAAI,EAAEhC,KAAK,CAACA;AADA,OAAd;AAGD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,KAAK,EAAE;AAAEwB,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADN,SADF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF,CAFF,EAUE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAE,KAAKG,KAAL,CAAWK,IAAX,KAAoB,EAApB,GAAyB,QAAzB,GAAoC,SAAhD;AAA2D,QAAA,GAAG,EAAE,KAAKC,OAArE;AAA8E,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWuB,UAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAEpD,MAAM,CAACqD,IAAP,CAAY,UAAAC,MAAM;AAAA,iBAAIA,MAAM,CAACpD,KAAP,KAAiB,MAAI,CAAC2B,KAAL,CAAWK,IAAhC;AAAA,SAAlB,CADT;AAEE,QAAA,QAAQ,EAAE,kBAAChC,KAAD;AAAA,iBAAW,MAAI,CAACqD,gBAAL,CAAsBrD,KAAtB,CAAX;AAAA,SAFZ;AAGE,QAAA,OAAO,EAAEF,MAHX;AAIE,QAAA,MAAM,EAAEkB,kBAJV;AAKE,QAAA,WAAW,MALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CAVF,EAoBM,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,UAAD;AAAY,QAAA,IAAI,EAAE,KAAKW,KAAL,CAAWC,IAA7B;AAAmC,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,WAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CApBN,CADF;AA0BD;;;;EA9EiBrC,S;;AAkFpB,eAAeiC,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport posed from 'react-pose'\nimport Select from 'react-select';\n\nimport MenuFinder from '../components/MenuFinder'\n\nconst cities = [\n  {\n    label: 'Halifax',\n    value: 'Halifax'\n  }\n]\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Source Sans Pro', sans-serif;\n  }\n`\n\nconst IndexWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  max-height: 100vh;\n  margin: 0;\n  padding: 0;\n  background-image: url(https://images.unsplash.com/photo-1491739481003-2991327b66e2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1654&q=80);\n  background-size: cover;\n  background-position: center;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column nowrap;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n`;\n\nconst Nav = styled.div`\n  width: 100%;\n  max-width: 100vw;\n  min-width: 100vw;\n  height: 96px;\n  padding: 0 32px;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst NavButton = styled.button`\n  border: 0;\n  border-radius: 8px;\n  appearance: none;\n  background: #fff;\n  font-size: 1rem;\n  font-weight: 700;\n  color: #000;\n  padding: 8px 16px;\n`;\n\nconst heroPose = {\n  lowered: {\n    y: ({ height }) => (`calc(50vh - 72px - ${height / 2}px) `)\n  },\n  raised: {\n    y: '0vh'\n  }\n}\n\nconst Hero = styled(posed.div(heroPose))`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n`;\n\nconst HeroText = styled.h1`\n  font-size: 3rem;\n  font-weight: 700;\n  color: #fff;\n  margin: 0;\n  margin-bottom: 16px;\n`;\n\nconst ContentArea = styled.div`\n  width: 100%;\n  padding: 16px;\n  box-sizing: border-box;\n  display: flex;\n  flex: 1;\n`;\n\nconst customSelectStyles = {\n  control: (provided) => ({\n    ...provided,\n    borderRadius: 8,\n    borderColor: '#fff',\n    fontSize: '2.25rem',\n    height: 56,\n    width: 240,\n    fontWeight: 700,\n    color: '#000',\n  })\n}\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menu: \"\",\n      restaurants: [\n        {\n          name: 'Julep Kitchen + Bar',\n          username: 'julepkitchenbar'\n        },\n        {\n          name: 'XOH',\n          username: 'xoh'\n        },\n      ],\n      raised: false,\n      city: ''\n    }\n    this.heroRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(displayLocationInfo);\n    }\n\n    function displayLocationInfo(position) {\n      const lng = position.coords.longitude;\n      const lat = position.coords.latitude;\n\n      console.log(`longitude: ${ lng } | latitude: ${ lat }`);\n    }\n    console.log(this.heroRef.current.offsetHeight);\n    console.log(this.heroRef.current.offsetHeight);\n    this.setState({\n      heroHeight: this.heroRef.current.offsetHeight\n    })\n  }\n\n  handleGeolocation(position) {\n    console.log('Geolocation');\n    console.log(position);\n  }\n\n  handleCitySelect(value) {\n    console.log(value);\n    this.setState({\n      city: value.value\n    })\n  }\n\n  render() {\n    return (\n      <IndexWrapper>\n        <GlobalStyle />\n        <Nav>\n          <span style={{ color: '#fff'}}>\n            our <br/>menu\n          </span>\n          <NavButton>\n            For restaurants\n          </NavButton>\n        </Nav>\n        <Hero pose={this.state.city !== \"\" ? 'raised' : 'lowered'} ref={this.heroRef} height={this.state.heroHeight}>\n          <HeroText>Menus for restaurants in</HeroText>\n          <Select\n            value={cities.find(option => option.value === this.state.city)}\n            onChange={(value) => this.handleCitySelect(value)}\n            options={cities}\n            styles={customSelectStyles}\n            simpleValue\n          />\n        </Hero>\n            <ContentArea>\n              <MenuFinder menu={this.state.menu} restaurants={this.state.restaurants} />\n            </ContentArea>\n      </IndexWrapper>\n    );\n  }\n\n}\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}