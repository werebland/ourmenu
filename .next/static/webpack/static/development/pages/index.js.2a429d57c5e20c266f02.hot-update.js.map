{"version":3,"file":"static/webpack/static/development/pages/index.js.2a429d57c5e20c266f02.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport posed from 'react-pose'\nimport Select from 'react-select';\n\nimport MenuFinder from '../components/MenuFinder'\n\nconst cities = [\n  {\n    label: 'Halifax',\n    value: 'Halifax'\n  }\n]\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Montserrat', sans-serif;\n  }\n`\n\nconst IndexWrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  max-height: 100vh;\n  margin: 0;\n  padding: 0;\n  background-image: url(https://images.unsplash.com/photo-1555813456-94a3dd418cd3?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjF9&auto=format&fit=crop&w=1252&q=80);\n  background-size: cover;\n  background-position: center;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column nowrap;\n`;\n\nconst Nav = styled.div`\n  width: 100%;\n  max-width: 100vw;\n  min-width: 100vw;\n  height: 72px;\n  padding: 16px;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n`;\n\nconst NavButton = styled.button`\n  border: 0;\n  border-radius: 8px;\n  appearance: none;\n  background: #fff;\n  font-size: 1rem;\n  font-weight: 600;\n  color: #000;\n  padding: 8px 16px;\n`;\n\nconst heroPose = {\n  lowered: {\n    y: ({ height }) => (`calc(50vh - 72px - ${height}px) `)\n  },\n  raised: {\n    y: '0vh'\n  }\n}\n\nconst Hero = styled(posed.div(heroPose))`\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n`;\n\nconst HeroText = styled.h1`\n  font-size: 2.5rem;\n  font-weight: 600;\n  color: #fff;\n  margin: 0;\n  margin-bottom: 16px;\n`;\n\nconst ContentArea = styled.div`\n  width: 100%;\n  padding: 16px;\n  box-sizing: border-box;\n  display: flex;\n  flex: 1;\n`;\n\nconst customSelectStyles = {\n  control: (provided) => ({\n    ...provided,\n    borderRadius: 8,\n    borderColor: '#fff',\n    fontSize: '2.5rem',\n    height: 80,\n    width: 240,\n    fontWeight: 600,\n    color: '#000',\n  })\n}\n\nclass Index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menu: \"\",\n      restaurants: [\n        {\n          name: 'Julep Kitchen + Bar',\n          username: 'julepkitchenbar'\n        },\n        {\n          name: 'XOH',\n          username: 'xoh'\n        },\n      ],\n      raised: false,\n      heroHeight: 49,\n      city: ''\n    }\n    this.heroRef = React.createRef();\n  }\n\n  componentDidMount() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(displayLocationInfo);\n    }\n\n    function displayLocationInfo(position) {\n      const lng = position.coords.longitude;\n      const lat = position.coords.latitude;\n\n      console.log(`longitude: ${ lng } | latitude: ${ lat }`);\n    }\n    console.log(this.heroRef.current.offsetHeight);\n    this.setState({\n      heroHeight: this.heroRef.current.offsetHeight\n    })\n  }\n\n  handleGeolocation(position) {\n    console.log('Geolocation');\n    console.log(position);\n  }\n\n  handleCitySelect(value) {\n    console.log(value);\n    this.setState({\n      city: value.value\n    })\n  }\n\n  render() {\n    return (\n      <IndexWrapper>\n        <GlobalStyle />\n        <Nav>\n          <span style={{ color: '#fff'}}>\n            our <br/>menu\n          </span>\n          <NavButton>\n            For restaurants\n          </NavButton>\n        </Nav>\n        <Hero pose={this.state.city !== \"\" ? 'raised' : 'lowered'} ref={this.heroRef} height={this.state.heroHeight}>\n          <HeroText>Menus for restaurants in</HeroText>\n          <Select\n            value={cities.find(option => option.value === this.state.city)}\n            onChange={(value) => this.handleCitySelect(value)}\n            options={cities}\n            styles={customSelectStyles}\n            simpleValue\n          />\n        </Hero>\n            <ContentArea>\n              <MenuFinder menu={this.state.menu} restaurants={this.state.restaurants} />\n            </ContentArea>\n      </IndexWrapper>\n    );\n  }\n\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAFA;AAMA;AAQA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AADA;AAJA;AASA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AADA;AACA;AAYA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AACA;AAdA;AAgBA;AAlBA;AAmBA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AAGA;;;AAEA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AADA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA9EA;AACA;AAiFA;;;;A","sourceRoot":""}