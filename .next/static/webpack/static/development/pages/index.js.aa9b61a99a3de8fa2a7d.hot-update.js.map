{"version":3,"file":"static/webpack/static/development/pages/index.js.aa9b61a99a3de8fa2a7d.hot-update.js","sources":["webpack:///./components/MenuFinder.jsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport posed, { PoseGroup } from 'react-pose'\nimport Select from 'react-select';\n\nconst MenuFinderContainer = styled.div`\n  position: relative;\n`;\n\nconst citySelectorPose = {\n  collapsed: {\n    height: ({offsetHeight}) =>  `calc(${offsetHeight}px + 96px + 96px)`,\n  },\n  expanded: {\n    height: '100vh',\n  }\n}\n\nconst CitySelector = styled(posed.div(citySelectorPose))`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: center;\n\n  & .dimension-div {\n    display: inline-flex;\n    flex-flow: column nowrap;\n    align-items: center;\n    justify-content: center;\n  }\n`;\n\nconst HeroText = styled.h1`\n  font-size: 3rem;\n  font-weight: 700;\n  color: #fff;\n  margin: 0;\n  margin-bottom: 16px;\n`;\n\nconst MenuPicker = styled.section`\n  width: 100%;\n  height: 100%;\n  background: #fff;\n  min-height: ${props => `calc(100vh - ${props.offsetHeight}px)`};\n  padding: 16px;\n  box-sizing: border-box;\n  display: flex;\n  flex-flow: column nowrap;\n  align-items: center;\n  justify-content: flex-start;\n`;\n\nconst MenuList = styled.div`\n  display: inline-flex;\n  flex-flow: column nowrap;\n`;\n\nconst MenuListItem = styled.article`\n  width: 100%;\n  max-width: 560px;\n  padding: 16px;\n  box-sizing: border-box;\n  border: 1px solid #fff;\n  border-radius: 8px;\n  background: #fff;\n  display: flex;\n  flex-flow: column nowrap;\n  cursor: pointer;\n  transition: padding-left 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,border-color 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms,border-width 200ms cubic-bezier(0.0, 0, 0.2, 1) 0ms;\n  margin-bottom: 16px;\n\n  &:hover {\n    border-color: #000;\n  }\n`;\n\nconst MenuListItemTitle = styled.h3`\n  font-size: 2rem;\n  font-weight: 700;\n  color: rgba(0,0,0,1);\n  margin: 0;\n`;\n\nconst MenuListItemSubtitle = styled.span`\n  font-size: 1.5rem;\n  font-weight: 500;\n  color: rgba(0,0,0,.64);\n`;\n\nconst selectStyles = {\n  control: (provided, state) => ({\n    ...provided,\n    borderRadius: 8,\n    borderColor: state.isSelected ? 'rgba(0,0,0,1)' : '#fff',\n    boxShaodw: state.isSelected ? 'none' : 'none',\n    fontSize: '2.25rem',\n    height: 56,\n    width: 240,\n    fontWeight: 700,\n    color: '#000',\n  }),\n  option: (provided, state) => ({\n    ...provided,\n    color: 'rgba(0,0,0,1)',\n  }),\n  singleValue: (provided, state) => ({\n    ...provided,\n    color: 'rgba(0,0,0,1)',\n  }),\n  input: (provided) => ({\n    ...provided,\n    color: 'rgba(0,0,0,1)',\n    fontWeight: 700,\n    color: '#000',\n  }),\n}\n\nfunction MenuFinder({ offsetHeight, cities, city, handleCitySelect, restaurants, handleRestaurantSelect, menu }) {\n  let containerRef = React.createRef();\n  console.log(containerRef);\n  return (\n  <MenuFinderContainer>\n    <CitySelector pose={city ? 'collapsed' : 'expanded'} offsetHeight={offsetHeight}>\n      <div className=\"dimension-div\" ref={containerRef}>\n        <HeroText>\n        Menus for restaurants in\n        </HeroText>\n        <Select\n          value={cities.find((option) => option.value == city)}\n          options={cities}\n          styles={selectStyles}\n          isClearable\n          onChange={(option) => handleCitySelect(option, containerRef.current.offsetHeight)}\n        />\n      </div>\n    </CitySelector>\n    <MenuPicker offsetHeight={offsetHeight}>\n      <MenuList>\n        {restaurants.map((restaurant) =>\n          <MenuListItem onClick={() => handleRestaurantSelect(restaurant.username)}>\n            <MenuListItemTitle>\n              {restaurant.name}\n            </MenuListItemTitle>\n            <MenuListItemSubtitle>\n              Southern · $$ - $$$ · 1669 Barrington St.\n            </MenuListItemSubtitle>\n          </MenuListItem>\n        )}\n      </MenuList>\n    </MenuPicker>\n  </MenuFinderContainer>\n)};\n\nexport default MenuFinder;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AADA;AAGA;AACA;AADA;AAJA;AASA;AAAA;AAAA;AAAA;AAgBA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAIA;AAAA;AASA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAmBA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAWA;AAAA;AAEA;AAFA;AAAA;AAIA;AAAA;AAEA;AAFA;AAAA;AAIA;AAAA;AAEA;AACA;AAHA;AAAA;AApBA;AACA;AA2BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAaA;AACA;AADA;AAEA;;;;A","sourceRoot":""}